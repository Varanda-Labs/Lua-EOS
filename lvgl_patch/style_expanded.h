lv_style_int_t lv_obj_get_style_radius(const lv_obj_t * obj, uint8_t part);
void lv_style_set_radius(lv_style_t * style, lv_state_t state, lv_style_int_t value);
bool lv_obj_get_style_clip_corner(const lv_obj_t * obj, uint8_t part);
void lv_style_set_clip_corner(lv_style_t * style, lv_state_t state, bool value);
lv_style_int_t lv_obj_get_style_size(const lv_obj_t * obj, uint8_t part);
void lv_style_set_size(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transform_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transform_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transform_height(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transform_height(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transform_angle(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transform_angle(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transform_zoom(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transform_zoom(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_opa_t lv_obj_get_style_opa_scale(const lv_obj_t * obj, uint8_t part);
void lv_style_set_opa_scale(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_style_int_t lv_obj_get_style_pad_top(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pad_top(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_pad_bottom(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pad_bottom(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_pad_left(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pad_left(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_pad_right(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pad_right(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_pad_inner(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pad_inner(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_margin_top(const lv_obj_t * obj, uint8_t part);
void lv_style_set_margin_top(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_margin_bottom(const lv_obj_t * obj, uint8_t part);
void lv_style_set_margin_bottom(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_margin_left(const lv_obj_t * obj, uint8_t part);
void lv_style_set_margin_left(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_margin_right(const lv_obj_t * obj, uint8_t part);
void lv_style_set_margin_right(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_blend_mode_t lv_obj_get_style_bg_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_style_int_t lv_obj_get_style_bg_main_stop(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_main_stop(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_bg_grad_stop(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_grad_stop(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_grad_dir(lv_style_t * style, lv_state_t state, lv_grad_dir_t value);
lv_color_t lv_obj_get_style_bg_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_color_t lv_obj_get_style_bg_grad_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_grad_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_bg_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_bg_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_style_int_t lv_obj_get_style_border_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_border_side_t lv_obj_get_style_border_side(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_side(lv_style_t * style, lv_state_t state, lv_border_side_t value);
lv_blend_mode_t lv_obj_get_style_border_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
bool lv_obj_get_style_border_post(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_post(lv_style_t * style, lv_state_t state, bool value);
lv_color_t lv_obj_get_style_border_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_border_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_border_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_style_int_t lv_obj_get_style_outline_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_outline_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_outline_pad(const lv_obj_t * obj, uint8_t part);
void lv_style_set_outline_pad(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_blend_mode_t lv_obj_get_style_outline_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_outline_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_color_t lv_obj_get_style_outline_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_outline_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_outline_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_outline_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_style_int_t lv_obj_get_style_shadow_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_shadow_ofs_x(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_ofs_x(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_shadow_ofs_y(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_ofs_y(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_shadow_spread(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_spread(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_blend_mode_t lv_obj_get_style_shadow_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_color_t lv_obj_get_style_shadow_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_shadow_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_shadow_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
bool lv_obj_get_style_pattern_repeat(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_repeat(lv_style_t * style, lv_state_t state, bool value);
lv_blend_mode_t lv_obj_get_style_pattern_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_color_t lv_obj_get_style_pattern_recolor(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_recolor(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_pattern_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_opa_t lv_obj_get_style_pattern_recolor_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_recolor_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
const void * lv_obj_get_style_pattern_image(const lv_obj_t * obj, uint8_t part);
void lv_style_set_pattern_image(lv_style_t * style, lv_state_t state, const void * value);
lv_style_int_t lv_obj_get_style_value_letter_space(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_letter_space(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_value_line_space(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_line_space(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_blend_mode_t lv_obj_get_style_value_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_style_int_t lv_obj_get_style_value_ofs_x(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_ofs_x(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_value_ofs_y(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_ofs_y(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_align_t lv_obj_get_style_value_align(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_align(lv_style_t * style, lv_state_t state, lv_align_t value);
lv_color_t lv_obj_get_style_value_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_value_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
const lv_font_t * lv_obj_get_style_value_font(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_font(lv_style_t * style, lv_state_t state, const lv_font_t * value);
const char * lv_obj_get_style_value_str(const lv_obj_t * obj, uint8_t part);
void lv_style_set_value_str(lv_style_t * style, lv_state_t state, const char * value);
lv_style_int_t lv_obj_get_style_text_letter_space(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_letter_space(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_text_line_space(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_line_space(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_text_decor_t lv_obj_get_style_text_decor(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_decor(lv_style_t * style, lv_state_t state, lv_text_decor_t value);
lv_blend_mode_t lv_obj_get_style_text_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_color_t lv_obj_get_style_text_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_color_t lv_obj_get_style_text_sel_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_sel_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_color_t lv_obj_get_style_text_sel_bg_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_sel_bg_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_text_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
const lv_font_t * lv_obj_get_style_text_font(const lv_obj_t * obj, uint8_t part);
void lv_style_set_text_font(lv_style_t * style, lv_state_t state, const lv_font_t * value);
lv_style_int_t lv_obj_get_style_line_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_blend_mode_t lv_obj_get_style_line_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_style_int_t lv_obj_get_style_line_dash_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_dash_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_line_dash_gap(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_dash_gap(lv_style_t * style, lv_state_t state, lv_style_int_t value);
bool lv_obj_get_style_line_rounded(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_rounded(lv_style_t * style, lv_state_t state, bool value);
lv_color_t lv_obj_get_style_line_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_line_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_line_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_blend_mode_t lv_obj_get_style_image_blend_mode(const lv_obj_t * obj, uint8_t part);
void lv_style_set_image_blend_mode(lv_style_t * style, lv_state_t state, lv_blend_mode_t value);
lv_color_t lv_obj_get_style_image_recolor(const lv_obj_t * obj, uint8_t part);
void lv_style_set_image_recolor(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_opa_t lv_obj_get_style_image_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_image_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_opa_t lv_obj_get_style_image_recolor_opa(const lv_obj_t * obj, uint8_t part);
void lv_style_set_image_recolor_opa(lv_style_t * style, lv_state_t state, lv_opa_t value);
lv_style_int_t lv_obj_get_style_transition_time(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_time(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_delay(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_delay(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_1(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_1(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_2(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_2(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_3(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_3(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_4(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_4(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_5(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_5(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_transition_prop_6(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_prop_6(lv_style_t * style, lv_state_t state, lv_style_int_t value);
const lv_anim_path_t * lv_obj_get_style_transition_path(const lv_obj_t * obj, uint8_t part);
void lv_style_set_transition_path(lv_style_t * style, lv_state_t state, const lv_anim_path_t * value);
lv_style_int_t lv_obj_get_style_scale_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_scale_border_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_border_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_scale_end_border_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_end_border_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_style_int_t lv_obj_get_style_scale_end_line_width(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_end_line_width(lv_style_t * style, lv_state_t state, lv_style_int_t value);
lv_color_t lv_obj_get_style_scale_grad_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_grad_color(lv_style_t * style, lv_state_t state, lv_color_t value);
lv_color_t lv_obj_get_style_scale_end_color(const lv_obj_t * obj, uint8_t part);
void lv_style_set_scale_end_color(lv_style_t * style, lv_state_t state, lv_color_t value);
